LLM: ChatGPT-4.
Date: 26 September 2024

Prompt:
  all_data <- read_csv("~/Documents/STA304/Term_Paper_1/paper/expenditure_analysis_data.csv")
  all_data$expenditure <- as.numeric(all_data$expenditure)
  
  # Expenditure by Year
  ggplot(all_data, aes(x = year, y = expenditure, fill = year)) +
    geom_bar(stat = "identity") +
    labs(title = "Total Expenditure by Year", x = "Year", y = "Expenditure") +
    theme_minimal()
  
  # Aggregating expenditure by consultant and selecting the top 10


Response:
  Here's how you can complete the code for aggregating the expenditure by consultant and selecting the top 10 consultants based on total expenditure, and then plotting a bar chart for these consultants:
  
  ```r
  # Loading necessary libraries
  library(ggplot2)
  library(dplyr)
  
  # Reading the data
  all_data <- read_csv("~/Documents/STA304/Term_Paper_1/paper/expenditure_analysis_data.csv")
  all_data$expenditure <- as.numeric(all_data$expenditure)
  
  # Expenditure by Year
  ggplot(all_data, aes(x = year, y = expenditure, fill = year)) +
    geom_bar(stat = "identity") +
    labs(title = "Total Expenditure by Year", x = "Year", y = "Expenditure") +
    theme_minimal()
  
  # Aggregating expenditure by consultant
  consultant_expenditure <- all_data %>%
    group_by(consultant) %>%
    summarise(total_expenditure = sum(expenditure, na.rm = TRUE)) %>%
    arrange(desc(total_expenditure)) %>%
    slice_max(order_by = total_expenditure, n = 10)
  
  # Plotting the top 10 consultants by total expenditure
  ggplot(consultant_expenditure, aes(x = reorder(consultant, -total_expenditure), y = total_expenditure, fill = consultant)) +
    geom_bar(stat = "identity") +
    labs(title = "Top 10 Consultants by Total Expenditure", x = "Consultant", y = "Total Expenditure") +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  ```
  
  ### Explanation:
  1. **Aggregating by Consultant**:
     - We group the data by `consultant` and then sum up the `expenditure` for each consultant.
     - `slice_max` is used to select the top 10 consultants with the highest expenditure.
     
  2. **Plotting**:
     - The bar chart uses `reorder(consultant, -total_expenditure)` to order the consultants based on total expenditure in descending order.
     - The axis labels are rotated for better readability if consultant names are long.
  
  Let me know if you need further modifications!

____________________________________
  
Prompt:
  GIve me two plots, EY's share over time, by year. and Deloittes share over time by year

Response:
      To create two plots showing **EY's** and **Deloitte's** share of total expenditure over time (by year), you can filter the dataset to focus on these two consultants, calculate their expenditure as a percentage of total expenditure for each year, and then plot the results.
  
  Hereâ€™s the R code that achieves this:
  
  ```r
  # Filter data for EY and Deloitte
  filtered_consultants <- all_data %>%
    filter(consultants_name %in% c("EY", "Deloitte"))
  
  # Calculate total expenditure per year
  total_expenditure_per_year <- all_data %>%
    group_by(year) %>%
    summarise(total_expenditure = sum(expenditure, na.rm = TRUE))
  
  # Calculate EY and Deloitte's share of expenditure per year
  consultant_share <- filtered_consultants %>%
    group_by(year, consultants_name) %>%
    summarise(consultant_expenditure = sum(expenditure, na.rm = TRUE)) %>%
    left_join(total_expenditure_per_year, by = "year") %>%
    mutate(share_percentage = consultant_expenditure / total_expenditure * 100)
  
  # Plot for EY's share over time
  ey_plot <- ggplot(consultant_share %>% filter(consultants_name == "EY"),
                    aes(x = year, y = share_percentage)) +
    geom_line(color = "blue", size = 1) +
    geom_point(color = "blue", size = 2) +
    labs(title = "EY's Share of Total Expenditure Over Time",
         x = "Year", y = "Share of Expenditure (%)") +
    theme_minimal()
  
  # Plot for Deloitte's share over time
  deloitte_plot <- ggplot(consultant_share %>% filter(consultants_name == "Deloitte"),
                          aes(x = year, y = share_percentage)) +
    geom_line(color = "green", size = 1) +
    geom_point(color = "green", size = 2) +
    labs(title = "Deloitte's Share of Total Expenditure Over Time",
         x = "Year", y = "Share of Expenditure (%)") +
    theme_minimal()
  
  # Print the two plots
  print(ey_plot)
  print(deloitte_plot)
  ```
  
  ### Explanation:
  1. **Filtered Data**: We filter the dataset to include only "EY" and "Deloitte."
  2. **Total Expenditure per Year**: The total expenditure for each year is calculated across all consultants.
  3. **Consultant Share Calculation**: For both EY and Deloitte, we calculate their share of the total expenditure as a percentage for each year.
  4. **Line Plots**: Two line plots are created, one for EY and one for Deloitte, showing their share of expenditure over time.
  
  This will generate two plots: one for EY and another for Deloitte, showing how their share of total expenditure changes year by year.